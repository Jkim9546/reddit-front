{"version":3,"sources":["Components/redditSingle.js","Components/favouriteReddit.js","Components/reddit.js","App.js","reportWebVitals.js","index.js"],"names":["RedditSingle","list","i","localStorage","length","item","JSON","parse","getItem","key","push","href","data","title","onClick","id","e","preventDefault","this","props","onChangePage","bind","Component","favouriteReddit","favourite","favouriteItems","items","selected","selectedID","j","rawItem","type","value","removeItem","score","url","Reddit","state","visiable","subReddit","fetch","then","response","json","setState","children","initializeFavoourite","StoreIDonWebStorage","catch","error","console","log","alert","clear","stringify","setItem","evt","target","className","placeholder","onChange","updateInputValue","loadSubReddit","_id","newFavourite","Array","from","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f2f856cc.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\n\r\nclass RedditSingle extends Component  {\r\n\r\n      render() {\r\n        var list =[];\r\n        var i=0;\r\n        while (i <localStorage.length){\r\n          var item = JSON.parse(localStorage.getItem(localStorage.key(i)));\r\n          list.push(\r\n            <li key ={item.data.id}>\r\n              <p> \r\n              <a href={item.data.title} \r\n                \r\n                onClick= {function (id, e){\r\n                  e.preventDefault();\r\n                  this.props.onChangePage(id);\r\n                }.bind(this, item.data.id )}> \r\n              {item.data.title} </a> </p>\r\n            </li>);\r\n          i = i + 1;\r\n        }\r\n      return (\r\n         <ul>\r\n              {list}\r\n         </ul>\r\n      );\r\n    }\r\n  }\r\n\r\n\r\nexport default RedditSingle;","import React, { Component } from 'react';\r\n\r\nclass favouriteReddit extends Component  {\r\n\r\n      render() {\r\n        var favourite = this.props.favouriteItems;\r\n        var i = 0;\r\n        var items = [];\r\n        while (i <localStorage.length){\r\n          var item = JSON.parse(localStorage.getItem(localStorage.key(i)));\r\n          items.push(item) ;\r\n          i = i + 1;\r\n        }\r\n\r\n        var list =[];\r\n        if (favourite.length > 0 ){\r\n          i=0;\r\n          while (i < favourite.length){\r\n            item = favourite[i];\r\n            if (item.selected === true) {\r\n              var selectedID = item.id;\r\n              var j=0;\r\n              while (j < items.length) {\r\n                var rawItem = items[j];\r\n                if (rawItem.data.id === selectedID){\r\n                  list.push(\r\n                    <li key ={rawItem.data.id}>\r\n                      <p> <input type=\"button\" value=\"remove\" onClick= {function (id, e){\r\n                          e.preventDefault();\r\n                          //alert('remove selected');\r\n                          this.props.removeItem(id);\r\n                        }.bind(this, rawItem.data.id )}></input>\r\n                        Title :  {rawItem.data.title}  </p>\r\n                      <p>Score: {rawItem.data.score}</p>\r\n                      <p>Link: <a href={rawItem.data.url} > {rawItem.data.url} </a> </p>\r\n                    </li>);\r\n                    break;\r\n                }\r\n                j = j + 1;\r\n              }\r\n            }\r\n            i = i + 1;\r\n          }\r\n  \r\n        }\r\n\r\n        \r\n      return (\r\n        <div>\r\n          <h1>Favourite Posts</h1>\r\n          <ul>\r\n              {list}\r\n          </ul>\r\n        </div>\r\n        \r\n      );\r\n    }\r\n  }\r\n\r\n\r\nexport default favouriteReddit;","import React, {Component} from 'react';\r\nimport RedditSingle from './redditSingle';\r\nimport FavouriteReddit from './favouriteReddit'\r\n\r\nclass Reddit extends Component {\r\n\r\n    \r\n    constructor(props) {\r\n        super(props);\r\n        \r\n        this.state = {\r\n            visiable: false,\r\n            subReddit:'',\r\n            favourite:[]\r\n        };\r\n    }\r\n\r\n    loadSubReddit(){\r\n        const url = 'https://www.reddit.com/r/' + this.state.subReddit + '/hot.json?limit=10';\r\n        //console.log(url);\r\n        fetch(url)\r\n        .then((response) => response.json())\r\n        .then((data) => {\r\n            this.setState({\r\n               visiable: true,\r\n               children: data.data.children\r\n            })\r\n            this.initializeFavoourite()\r\n            this.StoreIDonWebStorage()\r\n        })\r\n        .catch((error) => {\r\n            console.log(error);\r\n            alert('There was no SubReddit. Please check again subreddit name!!');\r\n            this.setState({\r\n                visiable: false,\r\n                subReddit:''\r\n             });\r\n        });\r\n    }\r\n\r\n    initializeFavoourite(){\r\n        if (this.state.children.length > 0)\r\n        {\r\n            var list = [];\r\n            var i=0;\r\n            while (i < this.state.children.length){\r\n                list.push({\r\n                    id: this.state.children[i].data.id,\r\n                    selected : false\r\n                })\r\n                i = i + 1;\r\n              } \r\n            this.setState({\r\n                favourite : list\r\n            })\r\n        }\r\n        //console.log(this.state.favourite);\r\n    }\r\n\r\n    StoreIDonWebStorage(){\r\n        localStorage.clear();\r\n\r\n        if (this.state.children.length > 0){\r\n            var i=0;\r\n            while (i < this.state.children.length){\r\n                var id =  this.state.children[i].data.id;\r\n                var value = JSON.stringify(this.state.children[i])\r\n                localStorage.setItem(id, value);\r\n                i = i + 1;\r\n                }\r\n                \r\n              } \r\n    }\r\n\r\n   updateInputValue(evt){\r\n       this.setState({\r\n        subReddit:evt.target.value \r\n       });\r\n   }\r\n\r\n    render() {\r\n        if (this.state.visiable === true) {\r\n            return (\r\n                <div className=\"App\">\r\n                    SubReddit Name: \r\n                    <input value={this.state.subReddit} placeholder=\"input a subreddit name\" onChange={evt => this.updateInputValue(evt)}/>\r\n                    <input type=\"button\" value =\"GetSubReddit\" onClick={() => this.loadSubReddit()}></input>\r\n                    <RedditSingle onChangePage= {function(id){\r\n                        var _id = id;\r\n                        var newFavourite = Array.from(this.state.favourite)\r\n\r\n                        var i=0;\r\n                        while (i < newFavourite.length){\r\n                            if (newFavourite[i].id === _id )\r\n                            {\r\n                                newFavourite[i].selected = true;\r\n                                break;\r\n                            }\r\n                            i = i + 1;\r\n                          } \r\n                        this.setState({\r\n                            favourite : newFavourite\r\n                        })\r\n                    }.bind(this)}></RedditSingle>\r\n                    <FavouriteReddit favouriteItems={this.state.favourite}  removeItem = {function(id){\r\n                        var _id=id;\r\n                        var newFavourite = Array.from(this.state.favourite)\r\n\r\n                        var i=0;\r\n                        while (i < newFavourite.length){\r\n                            if (newFavourite[i].id === _id )\r\n                            {\r\n                                newFavourite[i].selected = false;\r\n                                break;\r\n                            }\r\n                            i = i + 1;\r\n                          } \r\n                        this.setState({\r\n                            favourite : newFavourite\r\n                        })\r\n                    }.bind(this)}></FavouriteReddit>\r\n                </div>\r\n            )\r\n        } else\r\n        {\r\n            return (\r\n                <div className=\"App\">\r\n                    SubReddit Name: \r\n                    <input value={this.state.subReddit} placeholder=\"input a subreddit name\" onChange={evt => this.updateInputValue(evt)}/>\r\n                    <input type=\"button\" value =\"GetSubReddit\" onClick={() => this.loadSubReddit()}></input>\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n}\r\n\r\nexport default Reddit;","//import logo from './logo.svg';\n// import './App.css';\nimport Reddit from './Components/reddit';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n      <Reddit></Reddit>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}